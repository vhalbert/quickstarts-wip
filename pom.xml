<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
    	<groupId>org.jboss.integration-platform</groupId>
    	<artifactId>jboss-integration-platform-parent</artifactId>
    	<version>6.0.0.CR13</version>	
	</parent>
		
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.teiid.quickstart</groupId>
	<artifactId>teiid-quickstart-parent</artifactId>
	<packaging>pom</packaging>
	<version>2.1.0</version>
	<name>Teiid Quickstart Parent</name>
	<description>Quickstarts for the Teiid project</description>

	<url>http://jboss.org/teiid</url>
	<licenses>
		<license>
			<name>GNU Lesser General Public License</name>
			<url>http://www.gnu.org/copyleft/lesser.html</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<modules>
        <module>data-lineage-using-modeshape</module>
	</modules>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
	    <illegaltransitivereportonly>true</illegaltransitivereportonly>
			
		<version.org.jboss.integration-platform>6.0.0.CR13</version.org.jboss.integration-platform>

		<version.teiid>8.7.0.Final</version.teiid>

        <version.javax.annotation>${version.org.jboss.spec.javax.annotation.jboss-annotations-api_1.1_spec}</version.javax.annotation>
        <version.jboss.as.plugin>7.4.Final</version.jboss.as.plugin>       
        <version.net.jcip>1.0</version.net.jcip>
        <version.org.codehaus.mojo.exec.plugin>1.2.1</version.org.codehaus.mojo.exec.plugin>
        <version.org.hibernate>4.2.0.Final</version.org.hibernate>
        <version.org.hibernate.search>4.4.0.Final</version.org.hibernate.search>
        <version.org.infinispan>6.0.2.Final</version.org.infinispan>        
        <version.org.jboss.bom.jboss-javaee-6.0-with-tools>1.0.7.Final</version.org.jboss.bom.jboss-javaee-6.0-with-tools>
 		<hamcrest.version>1.3</hamcrest.version>
 
<!--
        <version.org.infinispan>6.1.0.Final-redhat-4</version.org.infinispan>
        <version.org.hibernate.search>4.5.0.Final</version.org.hibernate.search>
 -->

	</properties>
	
	<dependencies>

	
	</dependencies>
	
	<dependencyManagement>
		<dependencies>
		
           <dependency>
            	<groupId>org.jboss.integration-platform</groupId>
            	<artifactId>jboss-integration-platform-bom</artifactId>
            	<version>${version.org.jboss.integration-platform}</version>
            	<scope>import</scope>
            	<type>pom</type>
          </dependency> 		
          <dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-parent</artifactId>
             	<version>${version.teiid}</version>
             	<type>pom</type>
             	<scope>import</scope>
          </dependency>  
		
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${version.org.mockito}</version>
                <scope>test</scope>
            </dependency> 
			<dependency>
				<groupId>org.jboss.teiid.connectors</groupId>
				<artifactId>translator-object</artifactId>
				<version>${version.teiid}</version>
			</dependency>                              
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-common-core</artifactId>
				<version>${version.teiid}</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-api</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid-client</artifactId>
				<version>${version.teiid}</version>
			</dependency>
			<dependency>
				<groupId>org.jboss.teiid</groupId>
				<artifactId>teiid</artifactId>
				<version>${version.teiid}</version>
				<classifier>jdbc</classifier>
			</dependency>			
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-javaee-6.0-with-tools</artifactId>
                <version>${version.org.jboss.bom.jboss-javaee-6.0-with-tools}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>    
			 <dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>${version.javax.enterprise}</version>
			 </dependency>
			 <dependency>
				<groupId>org.scannotation</groupId>
				<artifactId>scannotation</artifactId>
				<version>${version.org.scannotation}</version>
			 </dependency>
			 <dependency>
            	<groupId>net.jcip</groupId>
            	<artifactId>jcip-annotations</artifactId>
            	<scope>provided</scope>
            	<version>${version.net.jcip}</version>
        	</dependency>
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-cdi</artifactId>
				<version>${version.org.infinispan}</version>
			</dependency>
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-query</artifactId>
				<version>${version.org.infinispan}</version>
			</dependency>            
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>${version.org.infinispan}</version>
 			</dependency>        
			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-commons</artifactId>
				<version>${version.org.infinispan}</version>
 			</dependency>  
 			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-client-hotrod</artifactId>
				<version>${version.org.infinispan}</version>
 			</dependency>			      
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search</artifactId>
                <version>${version.org.hibernate.search}</version>
            </dependency>    
            <dependency>
               <groupId>org.hibernate</groupId>
               <artifactId>hibernate-search-engine</artifactId>
               <version>${version.org.hibernate.search}</version>                      		           
        	</dependency> 
			<dependency>
			  <groupId>org.jboss.spec.javax.annotation</groupId>
			  <artifactId>jboss-annotations-api_1.1_spec</artifactId>
               <version>${version.javax.annotation}</version>                      		           
			</dependency>    
			<dependency>
				<groupId>org.modeshape</groupId>
				<artifactId>modeshape-client</artifactId>
				<version>3.8.1.Final</version>
			</dependency>	
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>	           				    	
         </dependencies>      
    </dependencyManagement>	

    <build>
        <plugins>
	  <!-- Specify the compiler options and settings -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<showDeprecation>false</showDeprecation>
					<showWarnings>false</showWarnings>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*TestCase.java</include>
						<include>**/*Test.java</include>
						<include>**/Test*.java</include>
					</includes>
					<excludes>
						<exclude>**/Abstract*TestCase.java</exclude>
			<!-- hack to prevent anonymous inner classes in Tests from being run as tests -->
						<include>**/Test*$*.java</include>
					</excludes>
					<systemPropertyVariables>
						<user.dir>${basedir}/target</user.dir>
						<java.io.tmpdir>${basedir}/target</java.io.tmpdir>
					</systemPropertyVariables>
				</configuration>
			</plugin>
      <!-- 
      Build a test-jar for each project, so that src/test/* resources and classes can be used
      in other projects.  Also customize how the jar files are assembled.
      -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifest>
							<addDefaultSpecificationEntries> true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries> true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-URL>${project.url}</Implementation-URL>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
 		</plugins>            
	</build>

    <profiles>    
        <profile>
            <id>dist</id>
            <activation>
                <file>
                    <exists>dist</exists>
                </file>
            </activation>
            <modules>
                <module>dist</module>
            </modules>
        </profile>
    </profiles>
</project>
